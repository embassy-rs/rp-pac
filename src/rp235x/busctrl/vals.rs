#[repr(u8)]
#[derive(Copy, Clone, Debug, Eq, PartialEq, Ord, PartialOrd)]
#[cfg_attr(feature = "defmt", derive(defmt::Format))]
pub enum Perfsel {
    SIOB_PROC1_STALL_UPSTREAM = 0x0,
    SIOB_PROC1_STALL_DOWNSTREAM = 0x01,
    SIOB_PROC1_ACCESS_CONTESTED = 0x02,
    SIOB_PROC1_ACCESS = 0x03,
    SIOB_PROC0_STALL_UPSTREAM = 0x04,
    SIOB_PROC0_STALL_DOWNSTREAM = 0x05,
    SIOB_PROC0_ACCESS_CONTESTED = 0x06,
    SIOB_PROC0_ACCESS = 0x07,
    APB_STALL_UPSTREAM = 0x08,
    APB_STALL_DOWNSTREAM = 0x09,
    APB_ACCESS_CONTESTED = 0x0a,
    APB_ACCESS = 0x0b,
    FASTPERI_STALL_UPSTREAM = 0x0c,
    FASTPERI_STALL_DOWNSTREAM = 0x0d,
    FASTPERI_ACCESS_CONTESTED = 0x0e,
    FASTPERI_ACCESS = 0x0f,
    SRAM9_STALL_UPSTREAM = 0x10,
    SRAM9_STALL_DOWNSTREAM = 0x11,
    SRAM9_ACCESS_CONTESTED = 0x12,
    SRAM9_ACCESS = 0x13,
    SRAM8_STALL_UPSTREAM = 0x14,
    SRAM8_STALL_DOWNSTREAM = 0x15,
    SRAM8_ACCESS_CONTESTED = 0x16,
    SRAM8_ACCESS = 0x17,
    SRAM7_STALL_UPSTREAM = 0x18,
    SRAM7_STALL_DOWNSTREAM = 0x19,
    SRAM7_ACCESS_CONTESTED = 0x1a,
    SRAM7_ACCESS = 0x1b,
    SRAM6_STALL_UPSTREAM = 0x1c,
    SRAM6_STALL_DOWNSTREAM = 0x1d,
    SRAM6_ACCESS_CONTESTED = 0x1e,
    SRAM6_ACCESS = 0x1f,
    SRAM5_STALL_UPSTREAM = 0x20,
    SRAM5_STALL_DOWNSTREAM = 0x21,
    SRAM5_ACCESS_CONTESTED = 0x22,
    SRAM5_ACCESS = 0x23,
    SRAM4_STALL_UPSTREAM = 0x24,
    SRAM4_STALL_DOWNSTREAM = 0x25,
    SRAM4_ACCESS_CONTESTED = 0x26,
    SRAM4_ACCESS = 0x27,
    SRAM3_STALL_UPSTREAM = 0x28,
    SRAM3_STALL_DOWNSTREAM = 0x29,
    SRAM3_ACCESS_CONTESTED = 0x2a,
    SRAM3_ACCESS = 0x2b,
    SRAM2_STALL_UPSTREAM = 0x2c,
    SRAM2_STALL_DOWNSTREAM = 0x2d,
    SRAM2_ACCESS_CONTESTED = 0x2e,
    SRAM2_ACCESS = 0x2f,
    SRAM1_STALL_UPSTREAM = 0x30,
    SRAM1_STALL_DOWNSTREAM = 0x31,
    SRAM1_ACCESS_CONTESTED = 0x32,
    SRAM1_ACCESS = 0x33,
    SRAM0_STALL_UPSTREAM = 0x34,
    SRAM0_STALL_DOWNSTREAM = 0x35,
    SRAM0_ACCESS_CONTESTED = 0x36,
    SRAM0_ACCESS = 0x37,
    XIP_MAIN1_STALL_UPSTREAM = 0x38,
    XIP_MAIN1_STALL_DOWNSTREAM = 0x39,
    XIP_MAIN1_ACCESS_CONTESTED = 0x3a,
    XIP_MAIN1_ACCESS = 0x3b,
    XIP_MAIN0_STALL_UPSTREAM = 0x3c,
    XIP_MAIN0_STALL_DOWNSTREAM = 0x3d,
    XIP_MAIN0_ACCESS_CONTESTED = 0x3e,
    XIP_MAIN0_ACCESS = 0x3f,
    ROM_STALL_UPSTREAM = 0x40,
    ROM_STALL_DOWNSTREAM = 0x41,
    ROM_ACCESS_CONTESTED = 0x42,
    ROM_ACCESS = 0x43,
    _RESERVED_44 = 0x44,
    _RESERVED_45 = 0x45,
    _RESERVED_46 = 0x46,
    _RESERVED_47 = 0x47,
    _RESERVED_48 = 0x48,
    _RESERVED_49 = 0x49,
    _RESERVED_4a = 0x4a,
    _RESERVED_4b = 0x4b,
    _RESERVED_4c = 0x4c,
    _RESERVED_4d = 0x4d,
    _RESERVED_4e = 0x4e,
    _RESERVED_4f = 0x4f,
    _RESERVED_50 = 0x50,
    _RESERVED_51 = 0x51,
    _RESERVED_52 = 0x52,
    _RESERVED_53 = 0x53,
    _RESERVED_54 = 0x54,
    _RESERVED_55 = 0x55,
    _RESERVED_56 = 0x56,
    _RESERVED_57 = 0x57,
    _RESERVED_58 = 0x58,
    _RESERVED_59 = 0x59,
    _RESERVED_5a = 0x5a,
    _RESERVED_5b = 0x5b,
    _RESERVED_5c = 0x5c,
    _RESERVED_5d = 0x5d,
    _RESERVED_5e = 0x5e,
    _RESERVED_5f = 0x5f,
    _RESERVED_60 = 0x60,
    _RESERVED_61 = 0x61,
    _RESERVED_62 = 0x62,
    _RESERVED_63 = 0x63,
    _RESERVED_64 = 0x64,
    _RESERVED_65 = 0x65,
    _RESERVED_66 = 0x66,
    _RESERVED_67 = 0x67,
    _RESERVED_68 = 0x68,
    _RESERVED_69 = 0x69,
    _RESERVED_6a = 0x6a,
    _RESERVED_6b = 0x6b,
    _RESERVED_6c = 0x6c,
    _RESERVED_6d = 0x6d,
    _RESERVED_6e = 0x6e,
    _RESERVED_6f = 0x6f,
    _RESERVED_70 = 0x70,
    _RESERVED_71 = 0x71,
    _RESERVED_72 = 0x72,
    _RESERVED_73 = 0x73,
    _RESERVED_74 = 0x74,
    _RESERVED_75 = 0x75,
    _RESERVED_76 = 0x76,
    _RESERVED_77 = 0x77,
    _RESERVED_78 = 0x78,
    _RESERVED_79 = 0x79,
    _RESERVED_7a = 0x7a,
    _RESERVED_7b = 0x7b,
    _RESERVED_7c = 0x7c,
    _RESERVED_7d = 0x7d,
    _RESERVED_7e = 0x7e,
    _RESERVED_7f = 0x7f,
}
impl Perfsel {
    #[inline(always)]
    pub const fn from_bits(val: u8) -> Perfsel {
        unsafe { core::mem::transmute(val & 0x7f) }
    }
    #[inline(always)]
    pub const fn to_bits(self) -> u8 {
        unsafe { core::mem::transmute(self) }
    }
}
impl From<u8> for Perfsel {
    #[inline(always)]
    fn from(val: u8) -> Perfsel {
        Perfsel::from_bits(val)
    }
}
impl From<Perfsel> for u8 {
    #[inline(always)]
    fn from(val: Perfsel) -> u8 {
        Perfsel::to_bits(val)
    }
}
